import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import ast
from st_vizzu import create_vizzu_obj, vizzu_animate

# Load the dataset
data_path = 'Jadarat_data.csv'  # Adjust this if needed for your environment
Jadarat_data = pd.read_csv(data_path)

# Data Cleaning & Preprocessing
# Convert the string representation of the list into an actual list
Jadarat_data['benefits'] = Jadarat_data['benefits'].apply(lambda x: ast.literal_eval(x) if isinstance(x, str) else x)

# Create the 'Salary' column by extracting the salary value
Jadarat_data['Salary'] = Jadarat_data['benefits'].apply(
    lambda x: float(x[1]) if isinstance(x, list) and len(x) > 1 and 'Salary' in str(x[0]) else None
)

# Create the 'Benefits' column by extracting the remaining items in the list (if any)
Jadarat_data['Benefits'] = Jadarat_data['benefits'].apply(
    lambda x: ', '.join(x[2:]) if isinstance(x, list) and len(x) > 2 else None
)

# Display the title and introduction
st.markdown('<h1 style="text-align: right; direction: rtl;">๐ฐ ุชุญููู ุจูุงูุงุช ุงููุธุงุฆู ูู ุงูููููุฉ ุงูุนุฑุจูุฉ ุงูุณุนูุฏูุฉ</h1>', unsafe_allow_html=True)
st.markdown('''<h3 style="text-align: right; direction: rtl;">ูููุง ุจุชุญููู ุงูุจูุงูุงุช ุงููุชุนููุฉ ุจุงูุฅุนูุงูุงุช ุงููุธูููุฉ ูู ุงูุณุนูุฏูุฉุ ูููุฏู ุฅูู ุงููุดู ุนู ูุนูููุงุช ูููุฉ ุญูู ุงูุฑูุงุชุจุ ุงูุฎุจุฑุงุช ุงููุทููุจุฉุ ูุงููุฑุต ุงููุชุงุญุฉ ูู ูุฎุชูู ุงูููุงุทู.</h3>''', unsafe_allow_html=True)

# Analyzing Salary Distribution for Fresh Graduates
fresh_grads = Jadarat_data[Jadarat_data['exper'] == 0]
st.markdown('<h3 style="text-align: right; direction: rtl;">๐ ุชูุฒูุน ุงูุฑูุงุชุจ ููุฎุฑูุฌูู ุงูุฌุฏุฏ</h3>', unsafe_allow_html=True)
plt.figure(figsize=(6, 4))
sns.histplot(fresh_grads['Salary'], bins=30, kde=True)
plt.title('ุชูุฒูุน ุงูุฑูุงุชุจ ููุฎุฑูุฌูู ุงูุฌุฏุฏ')
plt.xlabel('ุงูุฑุงุชุจ')
plt.ylabel('ุงูุชูุฑุงุฑ')
st.pyplot()

# Show Outliers in Salary (Values above 15000)
outliers = Jadarat_data[Jadarat_data['Salary'] > 15000]
st.markdown('<h3 style="text-align: right; direction: rtl;">๐จ ุงูููู ุงูุดุงุฐุฉ ูู ุงูุฑูุงุชุจ (ุฃุนูู ูู 15000)</h3>', unsafe_allow_html=True)
st.write(outliers[['job_title', 'Salary']])

# Animation of Salary vs Required Positions
st.markdown('<h3 style="text-align: right; direction: rtl;">๐ ุงูุชูุฒูุน ุงูุจูุงูู ุจูู ุงูุฑุงุชุจ ูุนุฏุฏ ุงูููุงุตุจ ุงููุทููุจุฉ</h3>', unsafe_allow_html=True)
vizzu_obj = create_vizzu_obj(Jadarat_data)
vizzu_obj = vizzu_animate(vizzu_obj, x="Salary", y="required_positions", color="region", title="ุงูุฑุงุชุจ ููุงุจู ุงูููุงุตุจ ุงููุทููุจุฉ")
st.write(vizzu_obj)

# Final Conclusion
st.markdown('''<h3 style="text-align: right; direction: rtl;">ูู ุงูููุงูุฉุ ุงูุชุญููู ููุดู ุนู ุจุนุถ ุงูุงุชุฌุงูุงุช ุงููููุฉ ูุซู ุชูุฒูุน ุงูุฑูุงุชุจ ุจุดูู ุบูุฑ ูุชุณุงูู ูู ุจุนุถ ุงูููุงุทูุ ูุงููุฑุต ุงููุชุงุญุฉ ููุฎุฑูุฌูู ุงูุฌุฏุฏ. ุจุงุณุชุฎุฏุงู ูุฐุง ุงูุชุญูููุ ูููููุง ุงุชุฎุงุฐ ูุฑุงุฑุงุช ุฃูุซุฑ ูุงุนููุฉ ูู ุงุฎุชูุงุฑ ุงููุธุงุฆู ุฃู ุญุชู ุชุญุฏูุฏ ุงููุธุงุฆู ุงูุชู ุชูุงุณุจ ููุงุฑุงุชูุง ูุงูุชูุงูุงุชูุง.</h3>''', unsafe_allow_html=True)
